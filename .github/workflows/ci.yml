name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_VERSION: '9.0.x'
  NODE_VERSION: '20.x'

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: todoapp
          POSTGRES_PASSWORD: todoapp_password
          POSTGRES_DB: todoapp_test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Test
        run: dotnet test --no-build --configuration Release --verbosity normal
        env:
          ConnectionStrings__DefaultConnection: Host=localhost;Database=todoapp_test_db;Username=todoapp;Password=todoapp_password

  frontend-tests:
    name: Frontend Tests and Linting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ./src/TodoApp.Web/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: ./src/TodoApp.Web

      - name: Lint
        run: npm run lint
        working-directory: ./src/TodoApp.Web

      - name: Type check
        run: npm run type-check
        working-directory: ./src/TodoApp.Web

      - name: Test
        run: npm run test:ci
        working-directory: ./src/TodoApp.Web